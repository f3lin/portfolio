# This is a basic workflow that is manually triggered

name: Deploy Manually

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Environment to deploy'
        # Default value if no value is explicitly provided
        default: 'dev'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
        #Array of inputs options
        options:
          - prod
          # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test-and-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.20.0"

      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Firebase CLI & Angular CLI
        run: npm install -g @angular/cli firebase-tools

      - name: Install dependencies
        run: npm install

      - name: Run Lint
        run: npm run lint

      - name: Run tests
        run: npm run test

  build:
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.20.0'

      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Firebase
        run: firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
